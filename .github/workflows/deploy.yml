name: Deploy Full-Stack App to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job cho Full-Stack App (Vercel)
  deploy-fullstack:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install backend dependencies
      run: npm ci

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      env:
        REACT_APP_API_URL: /api

    - name: Run tests
      run: npm test --if-present

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test --if-present

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'

  # Job cho testing
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install backend dependencies
      run: npm ci

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run backend tests
      run: npm test --if-present

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test --if-present

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  # Job cho linting
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run ESLint
      run: npx eslint . --ext .js,.jsx --ignore-path .gitignore

    - name: Run frontend ESLint
      working-directory: ./frontend
      run: npx eslint src --ext .js,.jsx
